name: Deploy Thai Script Learning PWA to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build PWA
      run: npm run build
      
    - name: Test PWA build
      run: |
        # Check if dist directory exists and contains expected files
        if [ ! -d "dist" ]; then
          echo "Build failed: dist directory not found"
          exit 1
        fi
        
        # List all files in dist for debugging
        echo "Files in dist directory:"
        ls -la dist/
        
        # Check for essential PWA files
        if [ ! -f "dist/index.html" ]; then
          echo "Build failed: index.html not found"
          exit 1
        fi
        
        # Check for manifest files (Vite PWA plugin generates both)
        if [ ! -f "dist/manifest.json" ] && [ ! -f "dist/manifest.webmanifest" ]; then
          echo "Build failed: No manifest file found (checked manifest.json and manifest.webmanifest)"
          exit 1
        fi
        
        if [ ! -f "dist/sw.js" ]; then
          echo "Build failed: service worker not found"
          exit 1
        fi
        
        echo "PWA build validation successful"
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: # Add custom domain here if needed
        
    - name: Verify deployment
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "Deployment completed successfully"
        echo "PWA should be available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
